---
# tasks file for install_barman
- name: Install epel-release
  ansible.builtin.yum:
    name: epel-release
    state: present
  when: (ansible_os_family == "RedHat")

- name: Add GPG key postgresql repository
  ansible.builtin.rpm_key:
    state: present
    key: https://download.postgresql.org/pub/repos/yum/keys/PGDG-RPM-GPG-KEY-RHEL
  when: (ansible_hostname == "barman")

- name: Install repo
  ansible.builtin.dnf:
    name: 'https://download.postgresql.org/pub/repos/yum/reporpms/EL-8-x86_64/pgdg-redhat-repo-latest.noarch.rpm'
    state: present
  notify: Disable module postgresql from CentOS repository
  when: (ansible_hostname == "barman")

- name: Flush handlers
  ansible.builtin.meta: flush_handlers

- name: Install barman and postgresql packages on barman
  ansible.builtin.dnf:
    name:
      - barman
      - barman-cli
      - postgresql16
    state: present
    update_cache: true
  when: (ansible_hostname == "barman")

- name: Install barman-cli and postgresql packages on nodes
  ansible.builtin.dnf:
    name:
      - barman-cli
    state: present
    update_cache: true
  when: (ansible_hostname != "barman")

- name: Generate SSH key for postgres
  ansible.builtin.user:
    name: postgres
    generate_ssh_key: yes
    ssh_key_type: rsa
    ssh_key_bits: 4096
    force: no
  when: (ansible_hostname == "node1")

- name: Generate SSH key for barman
  ansible.builtin.user:
    name: barman
#   uid: 993
    shell: /bin/bash
    generate_ssh_key: yes
    ssh_key_type: rsa
    ssh_key_bits: 4096
    force: no
  when: (ansible_hostname == "barman")

- name: Fetch all public ssh keys node1
  ansible.builtin.shell: cat /var/lib/pgsql/.ssh/id_rsa.pub
  register: ssh_keys
  when: (ansible_hostname == "node1")

- name: Transfer public key to barman
  delegate_to: barman
  authorized_key:
    key: "{{ ssh_keys.stdout }}"
    comment: "{{ansible_hostname}}"
    user: barman
  when: (ansible_hostname == "node1")

- name: Fetch all public ssh keys barman
  ansible.builtin.shell: cat /var/lib/barman/.ssh/id_rsa.pub
  register: ssh_keys
  when: (ansible_hostname == "barman")

- name: Transfer public key to barman
  delegate_to: node1
  authorized_key:
    key: "{{ ssh_keys.stdout }}"
    comment: "{{ansible_hostname}}"
    user: postgres
  when: (ansible_hostname == "barman")

- name: Create barman user
  become_user: postgres
  postgresql_user:
    name: barman
    password: '{{ barman_user_password }}'
    role_attr_flags: SUPERUSER
  ignore_errors: true
  when: (ansible_hostname == "node1")

- name: Add permission for barman
  ansible.builtin.lineinfile:
    path: /var/lib/pgsql/16/data/pg_hba.conf
    line: 'host    all   {{ barman_user }}    {{ barman_ip }}/32    scram-sha-256'
  when: (ansible_hostname == "node1" or ansible_hostname == "node2")

- name: Add permission for barman
  ansible.builtin.lineinfile:
    path: /var/lib/pgsql/16/data/pg_hba.conf
    line: 'host    replication   {{ barman_user }}    {{ barman_ip }}/32    scram-sha-256'
  when: (ansible_hostname == "node1" or ansible_hostname == "node2")

- name: Restart postgresql-server on node1
  ansible.builtin.service:
    name: postgresql-16
    state: restarted
  when: (ansible_hostname == "node1")

- name: Create DB for backup
  become_user: postgres
  postgresql_db:
    name: otus
    encoding: UTF-8
    template: template0
    state: present
  when: (ansible_hostname == "node1")

- name: Add tables to otus_backup
  become_user: postgres
  postgresql_table:
    db: otus
    name: test1
    state: present
  when: (ansible_hostname == "node1")

- name: copy .pgpass
  ansible.builtin.template:
    src: .pgpass.j2
    dest: /var/lib/barman/.pgpass
    owner: barman
    group: barman
    mode: '0600'
  when: (ansible_hostname == "barman")

- name: copy barman.conf
  ansible.builtin.template:
    src: barman.conf.j2
    dest: /etc/barman/barman.conf
    owner: barman
    group: barman
    mode: '0644'
  when: (ansible_hostname == "barman")

- name: copy node1.conf
  ansible.builtin.template:
    src: node1.conf.j2
    dest: /etc/barman/conf.d/node1.conf
    owner: barman
    group: barman
    mode: '0644'
  when: (ansible_hostname == "barman")

- name: barman switch-wal node1
  ansible.builtin.shell: barman switch-wal node1
  become_user: barman
  when: (ansible_hostname == "barman")

- name: barman cron
  ansible.builtin.shell: barman cron
  become_user: barman
  when: (ansible_hostname == "barman")


